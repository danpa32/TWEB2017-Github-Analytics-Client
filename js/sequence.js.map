{"version":3,"sources":["sequence.js"],"names":["d3","window","quorom","width","height","radius","Math","min","b","w","h","s","t","colors","open","closed","defaultColors","totalSize","vis","select","append","attr","partition","layout","size","PI","value","d","arc","svg","startAngle","x","endAngle","dx","innerRadius","sqrt","y","outerRadius","dy","json","data","text","owner","repo","issues","length","Date","date_crawl","toISOString","slice","buildHierarchy","createVisualization","initializeBreadcrumbTrail","drawLegend","on","toggleLegend","style","nodes","filter","path","selectAll","enter","depth","name","rank","mouseover","mouseleave","node","__data__","percentage","toPrecision","percentageString","textForClosed","textForOpen","percentageStr","sequenceArray","getAncestors","updateBreadcrumbs","indexOf","transition","duration","each","current","parent","unshift","trail","breadcrumbPoints","i","points","push","join","nodeArray","g","entering","exit","remove","li","r","legend","keys","entries","key","root","children","users","issue","user","login","undefined","state","Object","forEach","states","currUserNode","currStateNode","getSize","reduce","total","e","sort","d1","d2"],"mappings":"AAAA,MAAMA,KAAKC,OAAOD,EAAlB;AACA,MAAME,SAAS,EAAf;;AAEA;AACA,MAAMC,QAAQ,GAAd;AACA,MAAMC,SAAS,GAAf;AACA,MAAMC,SAASC,KAAKC,GAAL,CAASJ,KAAT,EAAgBC,MAAhB,IAA0B,CAAzC;;AAEA;AACA,MAAMI,IAAI;AACRC,KAAG,GADK,EACAC,GAAG,EADH,EACOC,GAAG,CADV,EACaC,GAAG;AADhB,CAAV;;AAIA;AACA,MAAMC,SAAS;AACbC,QAAM,SADO;AAEbC,UAAQ;AAFK,CAAf;AAIA;;;;AAIA,MAAMC,gBAAgB,CAAC,SAAD,EAAY,SAAZ,CAAtB;;AAEA;AACA,IAAIC,YAAY,CAAhB;;AAEA,MAAMC,MAAMlB,GAAGmB,MAAH,CAAU,QAAV,EAAoBC,MAApB,CAA2B,SAA3B,EACTC,IADS,CACJ,OADI,EACKlB,KADL,EAETkB,IAFS,CAEJ,QAFI,EAEMjB,MAFN,EAGTgB,MAHS,CAGF,OAHE,EAITC,IAJS,CAIJ,IAJI,EAIE,WAJF,EAKTA,IALS,CAKJ,WALI,EAKU,aAAYlB,QAAQ,CAAE,IAAGC,SAAS,CAAE,GAL9C,CAAZ;;AAOA,MAAMkB,YAAYtB,GAAGuB,MAAH,CAAUD,SAAV,GACfE,IADe,CACV,CAAC,IAAIlB,KAAKmB,EAAV,EAAcpB,SAASA,MAAvB,CADU,EAEfqB,KAFe,CAETC,KAAKA,EAAEH,IAFE,CAAlB;;AAIA,MAAMI,MAAM5B,GAAG6B,GAAH,CAAOD,GAAP,GACTE,UADS,CACEH,KAAKA,EAAEI,CADT,EAETC,QAFS,CAEAL,KAAKA,EAAEI,CAAF,GAAMJ,EAAEM,EAFb,EAGTC,WAHS,CAGGP,KAAKrB,KAAK6B,IAAL,CAAUR,EAAES,CAAZ,CAHR,EAITC,WAJS,CAIGV,KAAKrB,KAAK6B,IAAL,CAAUR,EAAES,CAAF,GAAMT,EAAEW,EAAlB,CAJR,CAAZ;;AAMA;AACA;AACA;;;;;;AAMAtC,GAAGuC,IAAH,CAAQ,WAAR,EAAsBC,IAAD,IAAU;AAC7BxC,KAAGmB,MAAH,CAAU,mBAAV,EACGsB,IADH,CACS,GAAED,KAAKE,KAAM,IAAGF,KAAKG,IAAK,EADnC;;AAGA3C,KAAGmB,MAAH,CAAU,mBAAV,EACGsB,IADH,CACQD,KAAKI,MAAL,CAAYC,MADpB;;AAGA7C,KAAGmB,MAAH,CAAU,aAAV,EACGsB,IADH,CACQ,IAAIK,IAAJ,CAASN,KAAKO,UAAd,EAA0BC,WAA1B,GAAwCC,KAAxC,CAA8C,CAA9C,EAAiD,EAAjD,CADR;;AAGA,MAAIV,OAAOW,eAAeV,IAAf,CAAX;AACAW,sBAAoBZ,IAApB;AACD,CAZD;;AAcA;AACA,SAASY,mBAAT,CAA6BZ,IAA7B,EAAmC;AACjC;AACAa;AACAC;AACArD,KAAGmB,MAAH,CAAU,eAAV,EAA2BmC,EAA3B,CAA8B,OAA9B,EAAuCC,YAAvC;;AAEA;AACA;AACArC,MAAIE,MAAJ,CAAW,YAAX,EACGC,IADH,CACQ,GADR,EACahB,MADb,EAEGmD,KAFH,CAES,SAFT,EAEoB,CAFpB;;AAIA;AACA,QAAMC,QAAQnC,UAAUmC,KAAV,CAAgBlB,IAAhB,EACXmB,MADW,CACJ/B,KAAMA,EAAEM,EAAF,GAAO,KADT,CAAd,CAbiC,CAcD;;AAEhC,QAAM0B,OAAOzC,IAAIsB,IAAJ,CAAS,CAACD,IAAD,CAAT,EAAiBqB,SAAjB,CAA2B,MAA3B,EACVpB,IADU,CACLiB,KADK,EAEVI,KAFU,GAGVzC,MAHU,CAGH,UAHG,EAIVC,IAJU,CAIL,SAJK,EAIOM,CAAD,IAAOA,EAAEmC,KAAF,GAAU,IAAV,GAAiB,MAJ9B,EAKVzC,IALU,CAKL,GALK,EAKAO,GALA,EAMVP,IANU,CAML,WANK,EAMQ,SANR,EAOVmC,KAPU,CAOJ,MAPI,EAOI7B,KAAKd,OAAOc,EAAEoC,IAAT,KAAkB/C,cAAcW,EAAEqC,IAAF,GAAShD,cAAc6B,MAArC,CAP3B,EAQVW,KARU,CAQJ,SARI,EAQO,CARP,EASVF,EATU,CASP,WATO,EASMW,SATN,CAAb;;AAWA;AACAjE,KAAGmB,MAAH,CAAU,YAAV,EAAwBmC,EAAxB,CAA2B,YAA3B,EAAyCY,UAAzC;;AAEA;AACAjD,cAAY0C,KAAKQ,IAAL,GAAYC,QAAZ,CAAqB1C,KAAjC;AACD;;AAED;AACA,SAASuC,SAAT,CAAmBtC,CAAnB,EAAsB;AACpB,QAAM0C,aAAa,CAAC,MAAM1C,EAAED,KAAR,GAAgBT,SAAjB,EAA4BqD,WAA5B,CAAwC,CAAxC,CAAnB;AACA,MAAIC,mBAAoB,GAAE5C,EAAED,KAAM,EAAlC;AACA,QAAM8C,gBAAgB,qBAAtB;AACA,QAAMC,cAAc,qBAApB;;AAEA,QAAMC,gBAAgB,+BAAtB;;AAEA,MAAIL,aAAa,GAAjB,EAAsB;AACpBE,uBAAmB,QAAnB;AACD;;AAED,UAAQ5C,EAAEoC,IAAV;AACE,SAAK,MAAL;AACE/D,SAAGmB,MAAH,CAAU,aAAV,EACGsB,IADH,CACQd,EAAED,KADV;AAEA1B,SAAGmB,MAAH,CAAU,qBAAV,EACGsB,IADH,CACQgC,WADR,EAEGjB,KAFH,CAES,WAFT,EAEsB,KAFtB;AAGAxD,SAAGmB,MAAH,CAAU,sBAAV,EACGsB,IADH,CACS,GAAEd,EAAEoC,IAAK,IADlB;AAEA;AACF,SAAK,QAAL;AACE/D,SAAGmB,MAAH,CAAU,aAAV,EACGsB,IADH,CACQd,EAAED,KADV;AAEA1B,SAAGmB,MAAH,CAAU,qBAAV,EACGsB,IADH,CACQ+B,aADR,EAEGhB,KAFH,CAES,WAFT,EAEsB,KAFtB;AAGAxD,SAAGmB,MAAH,CAAU,sBAAV,EACGsB,IADH,CACQd,EAAEoC,IADV;AAEA;AACF;AACE/D,SAAGmB,MAAH,CAAU,aAAV,EACGsB,IADH,CACQ8B,gBADR;AAEAvE,SAAGmB,MAAH,CAAU,qBAAV,EACGsB,IADH,CACQiC,aADR,EAEGlB,KAFH,CAES,WAFT,EAEsB,KAFtB;AAGAxD,SAAGmB,MAAH,CAAU,sBAAV,EACGsB,IADH,CACS,GAAEd,EAAEoC,IAAK,GADlB;AAzBJ;;AA6BA/D,KAAGmB,MAAH,CAAU,cAAV,EACGqC,KADH,CACS,KADT,EACgB,OADhB;;AAGA,QAAMmB,gBAAgBC,aAAajD,CAAb,CAAtB;AACAkD,oBAAkBF,aAAlB,EAAiCJ,gBAAjC;;AAEA;AACAvE,KAAG4D,SAAH,CAAa,MAAb,EACGJ,KADH,CACS,SADT,EACoB,GADpB;;AAGA;AACAtC,MAAI0C,SAAJ,CAAc,MAAd,EACGF,MADH,CACWS,IAAD,IAAWQ,cAAcG,OAAd,CAAsBX,IAAtB,KAA+B,CADpD,EAEGX,KAFH,CAES,SAFT,EAEoB,CAFpB;AAGD;;AAED;AACA,SAASU,UAAT,CAAoBvC,CAApB,EAAuB;AACrB;AACA3B,KAAGmB,MAAH,CAAU,QAAV,EACGqC,KADH,CACS,YADT,EACuB,QADvB;;AAGA;AACAxD,KAAG4D,SAAH,CAAa,MAAb,EAAqBN,EAArB,CAAwB,WAAxB,EAAqC,IAArC;;AAEA;AACAtD,KAAG4D,SAAH,CAAa,MAAb,EACGmB,UADH,GAEGC,QAFH,CAEY,IAFZ,EAGGxB,KAHH,CAGS,SAHT,EAGoB,CAHpB,EAIGyB,IAJH,CAIQ,KAJR,EAIe,YAAY;AACvBjF,OAAGmB,MAAH,CAAU,IAAV,EAAgBmC,EAAhB,CAAmB,WAAnB,EAAgCW,SAAhC;AACD,GANH;;AAQAjE,KAAGmB,MAAH,CAAU,aAAV,EACGsB,IADH,CACQ,EADR;;AAGAzC,KAAGmB,MAAH,CAAU,qBAAV,EACGsB,IADH,CACQ,YADR,EAEGe,KAFH,CAES,WAFT,EAEsB,OAFtB;;AAIAxD,KAAGmB,MAAH,CAAU,sBAAV,EACGsB,IADH,CACQ,EADR;;AAGAzC,KAAGmB,MAAH,CAAU,cAAV,EACGqC,KADH,CACS,KADT,EACgB,OADhB;AAED;;AAED;AACA;AACA,SAASoB,YAAT,CAAsBT,IAAtB,EAA4B;AAC1B,QAAMR,OAAO,EAAb;AACA,MAAIuB,UAAUf,IAAd;AACA,SAAOe,QAAQC,MAAf,EAAuB;AACrBxB,SAAKyB,OAAL,CAAaF,OAAb;AACAA,cAAUA,QAAQC,MAAlB;AACD;AACD,SAAOxB,IAAP;AACD;;AAED,SAASP,yBAAT,GAAqC;AACnC;AACA,QAAMiC,QAAQrF,GAAGmB,MAAH,CAAU,WAAV,EAAuBC,MAAvB,CAA8B,SAA9B,EACXC,IADW,CACN,OADM,EACGlB,KADH,EAEXkB,IAFW,CAEN,QAFM,EAEI,EAFJ,EAGXA,IAHW,CAGN,IAHM,EAGA,OAHA,CAAd;AAIA;AACAgE,QAAMjE,MAAN,CAAa,UAAb,EACGC,IADH,CACQ,IADR,EACc,UADd,EAEGmC,KAFH,CAES,MAFT,EAEiB,MAFjB;AAGD;;AAED;AACA,SAAS8B,gBAAT,CAA0B3D,CAA1B,EAA6B4D,CAA7B,EAAgC;AAC9B,QAAMC,SAAS,EAAf;AACAA,SAAOC,IAAP,CAAY,KAAZ;AACAD,SAAOC,IAAP,CAAa,GAAEjF,EAAEC,CAAE,IAAnB;AACA+E,SAAOC,IAAP,CAAa,GAAEjF,EAAEC,CAAF,GAAMD,EAAEI,CAAE,IAAGJ,EAAEE,CAAF,GAAM,CAAE,EAApC;AACA8E,SAAOC,IAAP,CAAa,GAAEjF,EAAEC,CAAE,IAAGD,EAAEE,CAAE,EAA1B;AACA8E,SAAOC,IAAP,CAAa,KAAIjF,EAAEE,CAAE,EAArB;AACA,MAAI6E,IAAI,CAAR,EAAW;AAAE;AACXC,WAAOC,IAAP,CAAa,GAAEjF,EAAEI,CAAE,IAAGJ,EAAEE,CAAF,GAAM,CAAE,EAA9B;AACD;AACD,SAAO8E,OAAOE,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED;AACA,SAASb,iBAAT,CAA2Bc,SAA3B,EAAsCpB,gBAAtC,EAAwD;AACtD;AACA,QAAMqB,IAAI5F,GAAGmB,MAAH,CAAU,QAAV,EACPyC,SADO,CACG,GADH,EAEPpB,IAFO,CAEFmD,SAFE,EAEUhE,CAAD,IAAOA,EAAEoC,IAAF,GAASpC,EAAEmC,KAF3B,CAAV;;AAIA;AACA,QAAM+B,WAAWD,EAAE/B,KAAF,GAAUzC,MAAV,CAAiB,OAAjB,CAAjB;;AAEAyE,WAASzE,MAAT,CAAgB,aAAhB,EACGC,IADH,CACQ,QADR,EACkBiE,gBADlB,EAEG9B,KAFH,CAES,MAFT,EAEiB7B,KAAKd,OAAOc,EAAEoC,IAAT,KAAkB/C,cAAcW,EAAEqC,IAAF,GAAShD,cAAc6B,MAArC,CAFxC;;AAIAgD,WAASzE,MAAT,CAAgB,UAAhB,EACGC,IADH,CACQ,GADR,EACa,CAACb,EAAEC,CAAF,GAAMD,EAAEI,CAAT,IAAc,CAD3B,EAEGS,IAFH,CAEQ,GAFR,EAEab,EAAEE,CAAF,GAAM,CAFnB,EAGGW,IAHH,CAGQ,IAHR,EAGc,QAHd,EAIGA,IAJH,CAIQ,aAJR,EAIuB,QAJvB,EAKGoB,IALH,CAKSd,CAAD,IAAOA,EAAEoC,IALjB;;AAOA;AACA6B,IAAEvE,IAAF,CAAO,WAAP,EAAoB,CAACM,CAAD,EAAI4D,CAAJ,KAAU,eAAeA,KAAK/E,EAAEC,CAAF,GAAMD,EAAEG,CAAb,CAAf,GAAiC,MAA/D;;AAEA;AACAiF,IAAEE,IAAF,GAASC,MAAT;;AAEA;AACA/F,KAAGmB,MAAH,CAAU,QAAV,EAAoBA,MAApB,CAA2B,WAA3B,EACGE,IADH,CACQ,GADR,EACa,CAACsE,UAAU9C,MAAV,GAAmB,GAApB,KAA4BrC,EAAEC,CAAF,GAAMD,EAAEG,CAApC,CADb,EAEGU,IAFH,CAEQ,GAFR,EAEab,EAAEE,CAAF,GAAM,CAFnB,EAGGW,IAHH,CAGQ,IAHR,EAGc,QAHd,EAIGA,IAJH,CAIQ,aAJR,EAIuB,QAJvB,EAKGoB,IALH,CAKQ8B,gBALR;;AAOA;AACAvE,KAAGmB,MAAH,CAAU,QAAV,EACGqC,KADH,CACS,YADT,EACuB,EADvB;AAED;;AAED,SAASH,UAAT,GAAsB;AACpB;AACA,QAAM2C,KAAK;AACTvF,OAAG,EADM,EACFC,GAAG,EADD,EACKC,GAAG,CADR,EACWsF,GAAG;AADd,GAAX;;AAIA,QAAMC,SAASlG,GAAGmB,MAAH,CAAU,SAAV,EAAqBC,MAArB,CAA4B,SAA5B,EACZC,IADY,CACP,OADO,EACE2E,GAAGvF,CADL,EAEZY,IAFY,CAEP,QAFO,EAEGrB,GAAGmG,IAAH,CAAQtF,MAAR,EAAgBgC,MAAhB,IAA0BmD,GAAGtF,CAAH,GAAOsF,GAAGrF,CAApC,CAFH,CAAf;;AAIA,QAAMiF,IAAIM,OAAOtC,SAAP,CAAiB,GAAjB,EACPpB,IADO,CACFxC,GAAGoG,OAAH,CAAWvF,MAAX,CADE,EAEPgD,KAFO,GAECzC,MAFD,CAEQ,OAFR,EAGPC,IAHO,CAGF,WAHE,EAGW,CAACM,CAAD,EAAI4D,CAAJ,KAAU,iBAAiBA,KAAKS,GAAGtF,CAAH,GAAOsF,GAAGrF,CAAf,CAAjB,GAAqC,GAH1D,CAAV;;AAKAiF,IAAExE,MAAF,CAAS,UAAT,EACGC,IADH,CACQ,IADR,EACc2E,GAAGC,CADjB,EAEG5E,IAFH,CAEQ,IAFR,EAEc2E,GAAGC,CAFjB,EAGG5E,IAHH,CAGQ,OAHR,EAGiB2E,GAAGvF,CAHpB,EAIGY,IAJH,CAIQ,QAJR,EAIkB2E,GAAGtF,CAJrB,EAKG8C,KALH,CAKS,MALT,EAKkB7B,CAAD,IAAOA,EAAED,KAL1B;;AAOAkE,IAAExE,MAAF,CAAS,UAAT,EACGC,IADH,CACQ,GADR,EACa2E,GAAGvF,CAAH,GAAO,CADpB,EAEGY,IAFH,CAEQ,GAFR,EAEa2E,GAAGtF,CAAH,GAAO,CAFpB,EAGGW,IAHH,CAGQ,IAHR,EAGc,QAHd,EAIGA,IAJH,CAIQ,aAJR,EAIuB,QAJvB,EAKGoB,IALH,CAKSd,CAAD,IAAOA,EAAE0E,GALjB;AAMD;;AAED,SAAS9C,YAAT,GAAwB;AACtB,QAAM2C,SAASlG,GAAGmB,MAAH,CAAU,SAAV,CAAf;AACA,MAAI+E,OAAO1C,KAAP,CAAa,YAAb,KAA8B,QAAlC,EAA4C;AAC1C0C,WAAO1C,KAAP,CAAa,YAAb,EAA2B,EAA3B;AACD,GAFD,MAEO;AACL0C,WAAO1C,KAAP,CAAa,YAAb,EAA2B,QAA3B;AACD;AACF;;AAED,SAASN,cAAT,CAAwBV,IAAxB,EAA8B;AAC5B,QAAM8D,OAAO,EAAEvC,MAAM,MAAR,EAAgBwC,UAAU,EAA1B,EAAb;AACA,QAAMC,QAAQ,EAAd;AACA,OAAK,IAAIjB,IAAI,CAAb,EAAgBA,IAAI/C,KAAKI,MAAL,CAAYC,MAAhC,EAAwC0C,KAAK,CAA7C,EAAgD;AAC9C,UAAMkB,QAAQjE,KAAKI,MAAL,CAAY2C,CAAZ,CAAd;AACA,QAAIiB,MAAMC,MAAMC,IAAN,CAAWC,KAAjB,MAA4BC,SAAhC,EAA2C;AACzCJ,YAAMC,MAAMC,IAAN,CAAWC,KAAjB,IAA0B,EAA1B;AACD;;AAED,QAAIH,MAAMC,MAAMC,IAAN,CAAWC,KAAjB,EAAwBF,MAAMI,KAA9B,MAAyCD,SAA7C,EAAwD;AACtDJ,YAAMC,MAAMC,IAAN,CAAWC,KAAjB,EAAwBF,MAAMI,KAA9B,IAAuC,EAAvC;AACD;AACDL,UAAMC,MAAMC,IAAN,CAAWC,KAAjB,EAAwBF,MAAMI,KAA9B,EAAqCpB,IAArC,CAA0CgB,KAA1C;AACD;;AAEDK,SAAOV,OAAP,CAAeI,KAAf,EAAsBO,OAAtB,CAA8B,CAAC,CAACJ,KAAD,EAAQK,MAAR,CAAD,KAAqB;AACjD,QAAIxF,OAAO,CAAX;AACA,UAAMyF,eAAe,EAAElD,MAAM4C,KAAR,EAAeJ,UAAU,EAAzB,EAArB;;AAEAO,WAAOV,OAAP,CAAeY,MAAf,EAAuBD,OAAvB,CAA+B,CAAC,CAACF,KAAD,EAAQjE,MAAR,CAAD,KAAqB;AAClDpB,cAAQoB,OAAOC,MAAf;AACA,YAAMqE,gBAAgB,EAAEnD,MAAM8C,KAAR,EAAerF,MAAMoB,OAAOC,MAA5B,EAAtB;AACAoE,mBAAaV,QAAb,CAAsBd,IAAtB,CAA2ByB,aAA3B;AACD,KAJD;;AAMA,QAAI1F,QAAQtB,MAAZ,EAAoB;AAClBoG,WAAKC,QAAL,CAAcd,IAAd,CAAmBwB,YAAnB;AACD;AACF,GAbD;;AAeA,WAASE,OAAT,CAAiBxF,CAAjB,EAAoB;AAClB,QAAIH,OAAO,CAAX;;AAEA,QAAIG,EAAE4E,QAAF,KAAeK,SAAnB,EAA8B;AAC5BpF,aAAOG,EAAE4E,QAAF,CAAWa,MAAX,CAAkB,CAACC,KAAD,EAAQC,CAAR,KAAcD,QAAQF,QAAQG,CAAR,CAAxC,EAAoD,CAApD,CAAP;AACD;;AAED,QAAI3F,EAAEH,IAAF,KAAWoF,SAAf,EAA0B;AACxBpF,cAAQG,EAAEH,IAAV;AACD;AACD,WAAOA,IAAP;AACD;;AAED8E,OAAKC,QAAL,CAAcgB,IAAd,CAAmB,CAACC,EAAD,EAAKC,EAAL,KAAYN,QAAQM,EAAR,IAAcN,QAAQK,EAAR,CAA7C;AACA,OAAK,IAAIjC,IAAI,CAAb,EAAgBA,IAAIe,KAAKC,QAAL,CAAc1D,MAAlC,EAA0C0C,KAAK,CAA/C,EAAkD;AAChDe,SAAKC,QAAL,CAAchB,CAAd,EAAiBvB,IAAjB,GAAwBuB,CAAxB;AACD;AACD,SAAOe,IAAP;AACD","file":"sequence.js","sourcesContent":["const d3 = window.d3\nconst quorom = 10;\n\n// Dimensions of sunburst.\nconst width = 750;\nconst height = 600;\nconst radius = Math.min(width, height) / 2;\n\n// Breadcrumb dimensions: width, height, spacing, width of tip/tail.\nconst b = {\n  w: 125, h: 30, s: 3, t: 10,\n};\n\n// Mapping of step names to colors.\nconst colors = {\n  open: '#32e875',\n  closed: '#c06c7f',\n};\n/* const colors = {\n  open: '#5687d1',\n  closed: '#7b615c',\n};*/\nconst defaultColors = ['#6ca0f1', '#357ded'];\n\n// Total size of all segments; we set this later, after loading the data.\nlet totalSize = 0;\n\nconst vis = d3.select('#chart').append('svg:svg')\n  .attr('width', width)\n  .attr('height', height)\n  .append('svg:g')\n  .attr('id', 'container')\n  .attr('transform', `translate(${width / 2},${height / 2})`);\n\nconst partition = d3.layout.partition()\n  .size([2 * Math.PI, radius * radius])\n  .value(d => d.size);\n\nconst arc = d3.svg.arc()\n  .startAngle(d => d.x)\n  .endAngle(d => d.x + d.dx)\n  .innerRadius(d => Math.sqrt(d.y))\n  .outerRadius(d => Math.sqrt(d.y + d.dy));\n\n// Use d3.text and d3.csv.parseRows so that we do not need to have a header\n// row, and can receive the csv as an array of arrays.\n/* d3.text(\"visit-sequence.csv\", function(text) {\n  var csv = d3.csv.parseRows(text);\n  var json = buildHierarchy(csv);\n  createVisualization(json);\n}); */\n\nd3.json('repo.json', (data) => {\n  d3.select('#header-repo-name')\n    .text(`${data.owner}/${data.repo}`);\n\n  d3.select('#header-nb-issues')\n    .text(data.issues.length);\n\n  d3.select('#info-crawl')\n    .text(new Date(data.date_crawl).toISOString().slice(0, 10));\n\n  let json = buildHierarchy(data);\n  createVisualization(json);\n});\n\n// Main function to draw and set up the visualization, once we have the data.\nfunction createVisualization(json) {\n  // Basic setup of page elements.\n  initializeBreadcrumbTrail();\n  drawLegend();\n  d3.select('#togglelegend').on('click', toggleLegend);\n\n  // Bounding circle underneath the sunburst, to make it easier to detect\n  // when the mouse leaves the parent g.\n  vis.append('svg:circle')\n    .attr('r', radius)\n    .style('opacity', 0);\n\n  // For efficiency, filter nodes to keep only those large enough to see.\n  const nodes = partition.nodes(json)\n    .filter(d => (d.dx > 0.005)); // 0.005 radians = 0.29 degrees\n\n  const path = vis.data([json]).selectAll('path')\n    .data(nodes)\n    .enter()\n    .append('svg:path')\n    .attr('display', (d) => d.depth ? null : \"none\")\n    .attr('d', arc)\n    .attr('fill-rule', 'evenodd')\n    .style('fill', d => colors[d.name] || defaultColors[d.rank % defaultColors.length])\n    .style('opacity', 1)\n    .on('mouseover', mouseover);\n\n  // Add the mouseleave handler to the bounding circle.\n  d3.select('#container').on('mouseleave', mouseleave);\n\n  // Get total size of the tree = value of root node from partition.\n  totalSize = path.node().__data__.value;\n}\n\n// Fade all but the current sequence, and show it in the breadcrumb trail.\nfunction mouseover(d) {\n  const percentage = (100 * d.value / totalSize).toPrecision(3);\n  let percentageString = `${d.value}`;\n  const textForClosed = ' of them have been ';\n  const textForOpen = ' of them are still ';\n\n  const percentageStr = ' issues have been created by ';\n\n  if (percentage < 0.1) {\n    percentageString = '< 0.1%';\n  }\n\n  switch (d.name) {\n    case 'open':\n      d3.select('#percentage')\n        .text(d.value);\n      d3.select('#info-text-nbIssues')\n        .text(textForOpen)\n        .style('font-size', '1em');\n      d3.select('#info-text-info-repo')\n        .text(`${d.name}ed`);\n      break;\n    case 'closed':\n      d3.select('#percentage')\n        .text(d.value);\n      d3.select('#info-text-nbIssues')\n        .text(textForClosed)\n        .style('font-size', '1em');\n      d3.select('#info-text-info-repo')\n        .text(d.name);\n      break;\n    default:\n      d3.select('#percentage')\n        .text(percentageString);\n      d3.select('#info-text-nbIssues')\n        .text(percentageStr)\n        .style('font-size', '1em');\n      d3.select('#info-text-info-repo')\n        .text(`${d.name}.`);\n  }\n\n  d3.select('#explanation')\n    .style('top', '240px');\n\n  const sequenceArray = getAncestors(d);\n  updateBreadcrumbs(sequenceArray, percentageString);\n\n  // Fade all the segments.\n  d3.selectAll('path')\n    .style('opacity', 0.3);\n\n  // Then highlight only those that are an ancestor of the current segment.\n  vis.selectAll('path')\n    .filter((node) => (sequenceArray.indexOf(node) >= 0))\n    .style('opacity', 1);\n}\n\n// Restore everything to full opacity when moving off the visualization.\nfunction mouseleave(d) {\n  // Hide the breadcrumb trail\n  d3.select('#trail')\n    .style('visibility', 'hidden');\n\n  // Deactivate all segments during transition.\n  d3.selectAll('path').on('mouseover', null);\n\n  // Transition each segment to full opacity and then reactivate it.\n  d3.selectAll('path')\n    .transition()\n    .duration(1000)\n    .style('opacity', 1)\n    .each('end', function () {\n      d3.select(this).on('mouseover', mouseover);\n    });\n\n  d3.select('#percentage')\n    .text('');\n\n  d3.select('#info-text-nbIssues')\n    .text('Touch me !')\n    .style('font-size', '2.5em');\n\n  d3.select('#info-text-info-repo')\n    .text('');\n\n  d3.select('#explanation')\n    .style('top', '210px');\n}\n\n// Given a node in a partition layout, return an array of all of its ancestor\n// nodes, highest first, but excluding the root.\nfunction getAncestors(node) {\n  const path = [];\n  let current = node;\n  while (current.parent) {\n    path.unshift(current);\n    current = current.parent;\n  }\n  return path;\n}\n\nfunction initializeBreadcrumbTrail() {\n  // Add the svg area.\n  const trail = d3.select('#sequence').append('svg:svg')\n    .attr('width', width)\n    .attr('height', 50)\n    .attr('id', 'trail');\n  // Add the label at the end, for the percentage.\n  trail.append('svg:text')\n    .attr('id', 'endlabel')\n    .style('fill', '#000');\n}\n\n// Generate a string that describes the points of a breadcrumb polygon.\nfunction breadcrumbPoints(d, i) {\n  const points = [];\n  points.push('0,0');\n  points.push(`${b.w},0`);\n  points.push(`${b.w + b.t},${b.h / 2}`);\n  points.push(`${b.w},${b.h}`);\n  points.push(`0,${b.h}`);\n  if (i > 0) { // Leftmost breadcrumb; don't include 6th vertex.\n    points.push(`${b.t},${b.h / 2}`);\n  }\n  return points.join(' ');\n}\n\n// Update the breadcrumb trail to show the current sequence and percentage.\nfunction updateBreadcrumbs(nodeArray, percentageString) {\n  // Data join; key function combines name and depth (= position in sequence).\n  const g = d3.select('#trail')\n    .selectAll('g')\n    .data(nodeArray, (d) => d.name + d.depth);\n\n  // Add breadcrumb and label for entering nodes.\n  const entering = g.enter().append('svg:g');\n\n  entering.append('svg:polygon')\n    .attr('points', breadcrumbPoints)\n    .style('fill', d => colors[d.name] || defaultColors[d.rank % defaultColors.length]);\n\n  entering.append('svg:text')\n    .attr('x', (b.w + b.t) / 2)\n    .attr('y', b.h / 2)\n    .attr('dy', '0.35em')\n    .attr('text-anchor', 'middle')\n    .text((d) => d.name);\n\n  // Set position for entering and updating nodes.\n  g.attr('transform', (d, i) => \"translate(\" + i * (b.w + b.s) + \", 0)\");\n\n  // Remove exiting nodes.\n  g.exit().remove();\n\n  // Now move and update the percentage at the end.\n  d3.select('#trail').select('#endlabel')\n    .attr('x', (nodeArray.length + 0.5) * (b.w + b.s))\n    .attr('y', b.h / 2)\n    .attr('dy', '0.35em')\n    .attr('text-anchor', 'middle')\n    .text(percentageString);\n\n  // Make the breadcrumb trail visible, if it's hidden.\n  d3.select('#trail')\n    .style('visibility', '');\n}\n\nfunction drawLegend() {\n  // Dimensions of legend item: width, height, spacing, radius of rounded rect.\n  const li = {\n    w: 75, h: 30, s: 3, r: 3,\n  };\n\n  const legend = d3.select('#legend').append('svg:svg')\n    .attr('width', li.w)\n    .attr('height', d3.keys(colors).length * (li.h + li.s));\n\n  const g = legend.selectAll('g')\n    .data(d3.entries(colors))\n    .enter().append('svg:g')\n    .attr('transform', (d, i) => \"translate(0,\" + i * (li.h + li.s) + \")\");\n\n  g.append('svg:rect')\n    .attr('rx', li.r)\n    .attr('ry', li.r)\n    .attr('width', li.w)\n    .attr('height', li.h)\n    .style('fill', (d) => d.value);\n\n  g.append('svg:text')\n    .attr('x', li.w / 2)\n    .attr('y', li.h / 2)\n    .attr('dy', '0.35em')\n    .attr('text-anchor', 'middle')\n    .text((d) => d.key);\n}\n\nfunction toggleLegend() {\n  const legend = d3.select('#legend');\n  if (legend.style('visibility') == 'hidden') {\n    legend.style('visibility', '');\n  } else {\n    legend.style('visibility', 'hidden');\n  }\n}\n\nfunction buildHierarchy(data) {\n  const root = { name: 'root', children: [] };\n  const users = {};\n  for (let i = 0; i < data.issues.length; i += 1) {\n    const issue = data.issues[i];\n    if (users[issue.user.login] === undefined) {\n      users[issue.user.login] = {};\n    }\n\n    if (users[issue.user.login][issue.state] === undefined) {\n      users[issue.user.login][issue.state] = [];\n    }\n    users[issue.user.login][issue.state].push(issue);\n  }\n\n  Object.entries(users).forEach(([login, states]) => {\n    let size = 0;\n    const currUserNode = { name: login, children: [] };\n\n    Object.entries(states).forEach(([state, issues]) => {\n      size += issues.length;\n      const currStateNode = { name: state, size: issues.length };\n      currUserNode.children.push(currStateNode);\n    });\n\n    if (size >= quorom) {\n      root.children.push(currUserNode);\n    }\n  });\n\n  function getSize(d) {\n    let size = 0;\n\n    if (d.children !== undefined) {\n      size = d.children.reduce((total, e) => total + getSize(e), 0);\n    }\n\n    if (d.size !== undefined) {\n      size += d.size;\n    }\n    return size;\n  }\n\n  root.children.sort((d1, d2) => getSize(d2) - getSize(d1));\n  for (let i = 0; i < root.children.length; i += 1) {\n    root.children[i].rank = i;\n  }\n  return root;\n}\n"]}